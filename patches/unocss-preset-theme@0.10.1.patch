diff --git a/dist/index.cjs b/dist/index.cjs
index bb635c72e4bf1a17daf0fbeb58b3e61eb2662871..c60fa1ee0edd87a354a9a4d5cf13940c1d0a3745 100755
--- a/dist/index.cjs
+++ b/dist/index.cjs
@@ -35,14 +35,14 @@ function presetTheme(options) {
     name: "unocss-preset-theme",
     extendTheme(originalTheme) {
       const recursiveTheme = (curTheme, preKeys = []) => {
-        Object.keys(curTheme).forEach((key) => {
+        Object.keys(curTheme ?? {}).forEach((key) => {
           const val = Reflect.get(curTheme, key);
           const themeKeys = preKeys.concat(key);
           const setThemeValue = (name, index = 0, isColor = false) => {
             themeValues.set(name, {
               theme: keys.reduce((obj, key2) => {
                 let themeValue = getThemeVal(theme[key2], themeKeys, index) || (key2 === "light" ? getThemeVal(originalTheme, themeKeys) : null);
-                if (themeValue) {
+                if (themeValue && typeof themeValue === "string") {
                   if (isColor) {
                     const cssColor = ruleUtils.parseCssColor(themeValue);
                     if (cssColor?.components)
diff --git a/dist/index.mjs b/dist/index.mjs
index a94b5c825a31e80bc1133d9d610c43bea58e798b..2daadc64cecb244acc6570af2a6823c8d7defd51 100755
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -31,14 +31,14 @@ function presetTheme(options) {
     name: "unocss-preset-theme",
     extendTheme(originalTheme) {
       const recursiveTheme = (curTheme, preKeys = []) => {
-        Object.keys(curTheme).forEach((key) => {
+        Object.keys(curTheme ?? {}).forEach((key) => {
           const val = Reflect.get(curTheme, key);
           const themeKeys = preKeys.concat(key);
           const setThemeValue = (name, index = 0, isColor = false) => {
             themeValues.set(name, {
               theme: keys.reduce((obj, key2) => {
                 let themeValue = getThemeVal(theme[key2], themeKeys, index) || (key2 === "light" ? getThemeVal(originalTheme, themeKeys) : null);
-                if (themeValue) {
+                if (themeValue && typeof themeValue === "string") {
                   if (isColor) {
                     const cssColor = parseCssColor(themeValue);
                     if (cssColor?.components)
